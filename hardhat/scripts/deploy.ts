import { ethers } from "hardhat";
import fs from "fs";
import path from "path";

async function main() {
  console.log("🚀 Starting contract deployment...");
  
  const network = await ethers.provider.getNetwork();
  console.log(`📡 Network: ${network.name} (Chain ID: ${network.chainId})`);

  // Deploy DataCoin contract
  console.log("📄 Deploying DataCoin contract...");
  const DataCoin = await ethers.getContractFactory("DataCoin");
  const dataCoin = await DataCoin.deploy();
  await dataCoin.waitForDeployment();
  
  
  const dataCoinAddress = await dataCoin.getAddress();
  console.log("✅ DataCoin deployed to:", dataCoinAddress);

  // Deploy Marketplace contract
  console.log("🏪 Deploying Marketplace contract...");
  const Marketplace = await ethers.getContractFactory("Marketplace");
  const marketplace = await Marketplace.deploy(dataCoinAddress);
  await marketplace.waitForDeployment();
  
  const marketplaceAddress = await marketplace.getAddress();
  console.log("✅ Marketplace deployed to:", marketplaceAddress);

  // Get contract ABIs
  const dataCoinABI = DataCoin.interface.format("json");
  const marketplaceABI = Marketplace.interface.format("json");

  // Create deployment info object
  const deploymentInfo = {
    network: {
      name: network.name,
      chainId: network.chainId.toString(),
    },
    contracts: {
      dataCoin: {
        address: dataCoinAddress,
        abi: JSON.parse(dataCoinABI as string),
      },
      marketplace: {
        address: marketplaceAddress,
        abi: JSON.parse(marketplaceABI as string),
      },
    },
    deployment: {
      timestamp: new Date().toISOString(),
      deployer: await ethers.provider.getSigner().getAddress(),
    },
  };

  // Save deployment info to JSON file
  const deploymentPath = path.join(__dirname, "../deployments", `${network.name}-${network.chainId}.json`);
  fs.mkdirSync(path.dirname(deploymentPath), { recursive: true });
  fs.writeFileSync(deploymentPath, JSON.stringify(deploymentInfo, null, 2));
  console.log("📁 Deployment info saved to:", deploymentPath);

  // Update frontend environment file
  const envContent = `# Contract Addresses - Auto-generated by deployment script
NEXT_PUBLIC_DATACOIN_CONTRACT_ADDRESS=${dataCoinAddress}
NEXT_PUBLIC_MARKETPLACE_CONTRACT_ADDRESS=${marketplaceAddress}
NEXT_PUBLIC_CHAIN_ID=${network.chainId}
NEXT_PUBLIC_NETWORK_NAME=${network.name}

# Network Configuration
NEXT_PUBLIC_RPC_URL=${network.chainId === 80002n ? (process.env.RPC_URL_AMOY || "https://rpc-amoy.polygon.technology") : (process.env.RPC_URL_MUMBAI || "https://polygon-mumbai.g.alchemy.com/v2/demo")}
NEXT_PUBLIC_RPC_URL_MUMBAI=${process.env.RPC_URL_MUMBAI || "https://polygon-mumbai.g.alchemy.com/v2/demo"}
NEXT_PUBLIC_RPC_URL_AMOY=${process.env.RPC_URL_AMOY || "https://rpc-amoy.polygon.technology"}
`;

  const envPath = path.join(__dirname, "../frontend/.env.local");
  fs.writeFileSync(envPath, envContent);
  console.log("🔧 Frontend environment updated:", envPath);

  // Save ABIs for frontend
  const abiDir = path.join(__dirname, "../frontend/src/lib/contracts");
  fs.mkdirSync(abiDir, { recursive: true });
  
  fs.writeFileSync(
    path.join(abiDir, "DataCoin.json"),
    JSON.stringify({ address: dataCoinAddress, abi: deploymentInfo.contracts.dataCoin.abi }, null, 2)
  );
  
  fs.writeFileSync(
    path.join(abiDir, "Marketplace.json"),
    JSON.stringify({ address: marketplaceAddress, abi: deploymentInfo.contracts.marketplace.abi }, null, 2)
  );
  
  console.log("📋 Contract ABIs saved to frontend/src/lib/contracts/");

  // Display summary
  console.log("\n🎉 Deployment Summary:");
  console.log("=" * 50);
  console.log(`📡 Network: ${network.name} (${network.chainId})`);
  console.log(`🪙 DataCoin: ${dataCoinAddress}`);
  console.log(`🏪 Marketplace: ${marketplaceAddress}`);
  console.log(`👤 Deployer: ${deploymentInfo.deployment.deployer}`);
  console.log(`⏰ Timestamp: ${deploymentInfo.deployment.timestamp}`);
  console.log("=" * 50);
  
  console.log("\n🔗 Explorer Links:");
  const explorerBase = network.chainId === 80002n ? "https://amoy.polygonscan.com" : "https://mumbai.polygonscan.com";
  console.log(`DataCoin: ${explorerBase}/address/${dataCoinAddress}`);
  console.log(`Marketplace: ${explorerBase}/address/${marketplaceAddress}`);
  
  console.log("\n✅ Deployment completed successfully!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
