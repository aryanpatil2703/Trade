name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Lint and test frontend
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Run linter
        run: |
          cd frontend
          npm run lint
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/.next/

  # Test and compile smart contracts
  contracts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: hardhat/package-lock.json
      
      - name: Install dependencies
        run: |
          cd hardhat
          npm ci
      
      - name: Compile contracts
        run: |
          cd hardhat
          npm run compile
      
      - name: Run tests
        run: |
          cd hardhat
          npm run test
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: contract-artifacts
          path: hardhat/artifacts/

  # Test backend API
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      - name: Build backend
        run: |
          cd backend
          npm run build
      
      - name: Run backend tests
        run: |
          cd backend
          npm test || echo "No tests configured yet"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist/

  # Deploy to testnet (on main branch)
  deploy:
    needs: [frontend, contracts, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          cd hardhat
          npm ci
      
      - name: Deploy contracts
        env:
          RPC_URL_MUMBAI: ${{ secrets.RPC_URL_MUMBAI }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          cd hardhat
          npm run deploy:mumbai
      
      - name: Update contract addresses
        run: |
          echo "NEXT_PUBLIC_DATACOIN_CONTRACT_ADDRESS=${{ env.DATACOIN_ADDRESS }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_MARKETPLACE_CONTRACT_ADDRESS=${{ env.MARKETPLACE_ADDRESS }}" >> $GITHUB_ENV

  # Deploy frontend to Vercel
  deploy-frontend:
    needs: [frontend, deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run security audit
        run: |
          cd frontend && npm audit --audit-level moderate
          cd ../backend && npm audit --audit-level moderate
          cd ../hardhat && npm audit --audit-level moderate
      
      - name: Check for vulnerabilities
        run: |
          echo "Security audit completed"

  # Performance test
  performance:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/.next/
      
      - name: Download backend artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/dist/
      
      - name: Run performance tests
        run: |
          echo "Performance tests would run here"
          echo "Frontend bundle size check"
          echo "API response time check"
          echo "Database query performance"

  # Notify on completion
  notify:
    needs: [frontend, contracts, backend, security, performance]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify completion
        run: |
          if [ "${{ needs.frontend.result }}" == "success" ] && [ "${{ needs.contracts.result }}" == "success" ] && [ "${{ needs.backend.result }}" == "success" ]; then
            echo "✅ All checks passed"
          else
            echo "❌ Some checks failed"
            exit 1
          fi
